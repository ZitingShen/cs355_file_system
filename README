Project: File System
Author: Linyi Chen & Ziting Shen

Compile:
make
(make format)

Execute:
./main
(./format <disk name> [-s size])

Disk Format:
************************
boot block
************************
superblock
************************
inode region
************************
data region
(including free blocks)
************************
reserved region to
store free block indices
************************
swap region
************************

Limitations:
1. Format will set the initial data_offset to 1% of the disk image size to leave some space for the inode region to grow. If the inode region grows larger than the given size, an error will be returned.

2. The disk can have at most 4294967295 files, and each file has at most 12 characters name.

3. Valgrind reported some memory off-by-one errors when handling the filenames,
but I checked and everything seemed to be fine. I tried to fix them, but more errors poped up, so I just gave up.

4. Valgrind also reported errors when writing into uninitialized malloc'd blocks. The problem is that the blocks are already bzeroed, and it is the system call write() that writes uninitialized bytes into it. I don't think there is a good way to fix this other than significantly change the library design.

5. If redirection out is needed, the '>' or '>>' needs to be the second last token of the arguments. A space is needed before and after the '>' and '>>'. Redirection in other format will not be recognized by the shell.

6. When the shell is started, if there is no disk named "DISK", the shell will format one for you. This is different from the spec's requirement.

7. Only one disk can be mounted now by the shell automatically. The library does not implement mounting multiple disks or mounting at any arbitrary location.

8. chmod only supports absolute mode. The mode are listed as following:
#define PERMISSION_R		4
#define	PERMISSION_W		2
#define PERMISSION_X		1

9. For redirection, one temporary file names 'temp' will be generated to redirect the file into our formatted disk.